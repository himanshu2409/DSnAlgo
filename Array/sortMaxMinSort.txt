#include<bits/stdc++.h>
using namespace std;
void rearrangeArray(int arr[],int n)
{
    bool flag=true;
    int temp[n];
    int small=0,large=n-1;
    for(int i=0;i<n;i++)
    {
       if (flag){
           cout<<"\n large "<<large<<" "<<endl;
            temp[i] = arr[large--];
       }
        else
        {
            cout<<"small "<<small<<" "<<endl;
            temp[i] = arr[small++];
        }
         flag = !flag;
    }
    for (int i = 0; i < n; i++)
       arr[i] = temp[i];
}
int main() {
     int arr[] = { 1, 2, 3, 4, 5, 6 };
    int n = sizeof(arr) / sizeof(arr[0]);
 
    cout << "Original Array\n";
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
 
    rearrangeArray(arr, n);
 
    cout << "\nModified Array\n";
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
    return 0;
}

Output:

Original Array
1 2 3 4 5 6 
 large 5 
small 0 

 large 4 
small 1 

 large 3 
small 2 

Modified Array
6 1 5 2 4 3 

Approach 2
int max_idx = n - 1, min_idx = 0; 
    
    	//Storing maximum element of array. 
    	int max_elem = arr[n - 1] + 1; 
    
    	for (int i = 0; i < n; i++) { 
    		//At even index, we have to put maximum elements in decreasing order. 
    		if (i % 2 == 0) { 
    			arr[i] += (arr[max_idx] % max_elem) * max_elem;
    			//Updating maximum index.
    			max_idx--; 
    		} 
    
    		//At odd index, we have to put minimum elements in increasing order. 
    		else { 
    			arr[i] += (arr[min_idx] % max_elem) * max_elem;
    			//Updating minimum index.
    			min_idx++; 
    		} 
    	} 
    
    	//Dividing array elements by maximum element to get the result. 
    	for (int i = 0; i < n; i++) 
    		arr[i] = arr[i] / max_elem; 