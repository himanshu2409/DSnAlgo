#include <bits/stdc++.h>
using namespace std;

int findRotatedArray(int arr[],int n,int key)
{
    int ans=-1;
    for(int i=0;i<n;i++)
    {
        if(arr[i]==key)
        {
            ans=i;
            break;
        }
    }
    return ans;
}
int main() {
   // cout<<"Hello World!";
    int arr[] = { 4, 5, 6, 7, 8, 9, 1, 2, 3 };
    int n = sizeof(arr) / sizeof(arr[0]);
    int key = 30;
    int i = findRotatedArray(arr,n,key);
 
    if (i != -1)
        cout << "Index: " << i << endl;
    else
        cout << "Key not found";
return 0;
}


binary search
#include <bits/stdc++.h>
using namespace std;

int findRotatedArray(int arr[],int start,int end,int key)
{
    if(start>end)
    {
        return -1;
    }
    int mid=(start+end)/2;
    if(arr[mid]==key)
    return mid;
    if(arr[start]<=arr[mid])
    {
        if(key>=arr[start]&& key<=arr[mid])
        return findRotatedArray(arr,start,mid-1,key);
        return findRotatedArray(arr,mid+1,end-1,key);
    }
     if(key>=arr[mid]&& key<=arr[end])
        return findRotatedArray(arr,mid+1,end-1,key);
         return findRotatedArray(arr,start,mid-1,key);
}
int main() {
   // cout<<"Hello World!";
    int arr[] = { 4, 5, 6, 7, 8, 9, 1, 2, 3 };
    int n = sizeof(arr) / sizeof(arr[0]);
    int key = 6;
    int i = findRotatedArray(arr,0,n-1,key);
 
    if (i != -1)
        cout << "Index: " << i << endl;
    else
        cout << "Key not found";
return 0;
}
