#include <iostream>
using namespace std;
class node
{
    public:
  node *next;
  int data;
  node(int val)
  {
      data=val;
      next=NULL;
  }
};
void insertAtTail(node *&head,int val)
{
    node *n=new node(val);
    if(head==NULL)
    {
        head=n;
        return;
    }
    node *temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=n;
}
void midElement(node *&head)
{
    node *slow=head;
    node *fast=head;
    if(head!=NULL)
    {
        while(fast!=NULL && fast->next!=NULL)
        {
             slow=slow->next;
             fast=fast->next->next;  
        }
        cout<<slow->data;
    }
}
int length(node *head)
{
    node *temp=head;
    int l=0;
    while(temp!=NULL)
    {
        l++;
        temp=temp->next;
    }
    return l;
}
node *appendK(node *&head,int k)
{
   node *newHead;
   node *newTail;
   node *tail=head;
   int len=length(head);
    k=k%len;
   if(k<0)
   {
       k=k+len;
   }

   int count=1;
   while(tail->next!=NULL)
   {
       if(count==len-k)
       {
           newTail=tail;
       }
       if(count==len-k+1)
       {
           newHead=tail;
       }
       tail=tail->next;
       count++;
   }
   newTail->next=NULL;
   tail->next=head;
   return newHead;
}
void display(node *&head)
{
    node *temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}
int main() {
    node *head=NULL;
    int arr[]={1,2,3,4,5,6};
    for(int i=0;i<6;i++)
    {
         insertAtTail(head,arr[i]);
    }
    node *m=appendK(head,6);
    display(m);
    return 0;
}
