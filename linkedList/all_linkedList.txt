#include <iostream>
using namespace std;
class node
{
    public:
    int data;
    node *next;
    node(int val)
    {
        data=val;
        next=NULL;
    }
};

void insertAtTail(node *&head,int val)
{
    node *n=new node(val);
    if(head==NULL)
    {
        head=n;
        return;
    }
    node *temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=n;

}
/*
bool search(node *&head,int key)
{
    node *temp=head;
    while(temp!=NULL)
    {
        if(temp->data==key)
        {
            return true;
        }
        temp=temp->next;
    }
    return false;
}
void insertAtHead(node *&head,int val)
{
    node *n=new node(val);
    n->next=head;
    head=n;
}
void deleteAtHead(node *&head)
{
    node *todelete=head;
    head=head->next;
    delete todelete;
}
void deleteData(node *&head,int val)
{
    if(head==NULL)
    return;
    if(head->next==NULL)
    {
    deleteAtHead(head);
    return;
    }
    node *temp=head;
    while(temp->next->data!=val)
    {
        temp=temp->next;
    }
    node *todelete=temp->next;
    temp->next=temp->next->next;
    delete todelete;
}
node *reverse(node *&head)
{
    node *current=head;
    node *prev=NULL;
    node *next=NULL;
    while(current!=NULL)
    {
        next=current->next;
        current->next=prev;
        prev=current;
        current=next;
    }
    return prev;
}
node *recursiveReverse(node *&head)
{
    if(head==NULL|| head->next==NULL)
    return head;
    node *newHead=recursiveReverse(head->next);
    head->next->next=head;
    head->next=NULL;
    return newHead;
} */
node *revereseK(node *&head,int k)
{
    node *current=head;
    node *prev=NULL;
    node *next=NULL;
    int count=0;
    while (current != NULL && count < k) {
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
        count++;
    }
   if (next != NULL)
        head->next = revereseK(next, k);

    return prev;
}
void display(node *head)
{
    node *temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<endl;
}

int main() {
    node *head=NULL;
    insertAtTail(head,1);
    insertAtTail(head,2);
    insertAtTail(head,3);
    insertAtTail(head,4);
   insertAtTail(head,5);
  //  deleteAtHead(head);
    //deleteData(head,2);
   head = revereseK(head, 2);
    display(head);
}
