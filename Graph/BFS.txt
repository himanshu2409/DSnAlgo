#include <bits/stdc++.h>
using namespace std;
vector<int>BFS(int V,vector<int>adj[])
{
     vector<int> bfs; 
	    vector<int> vis(V, 0); 
	    queue<int> q; 
	    q.push(0); 
	    vis[0] = 1; 
	    while(!q.empty()) {
	        int node = q.front();
	        q.pop(); 
	        bfs.push_back(node); 
	        
	        for(auto it : adj[node]) {
	            if(!vis[it]) {
	                q.push(it); 
	                vis[it] = 1; 
	            }
	        }
	    }
	    
	    return bfs; 
}
int main() {
    int V,E;
    cin>>V>>E;
    vector<int>adjacent[V];
    for(int i=0;i<E;i++)
    {
        int u,v;
        cin>>u>>v;
        adjacent[u].push_back(v);
    }
    vector<int>ans=BFS(V,adjacent);
    for(int p=0;p<ans.size();p++)
    {
        cout<<ans[p]<<" ";
    }
    return 0;
}
